// Generated from IRI.g4 by ANTLR 4.1
package testSetGrammar;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class IRILexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		UCSCHAR=1, IPRIVATE=2, D0=3, D1=4, D2=5, D3=6, D4=7, D5=8, D6=9, D7=10, 
		D8=11, D9=12, A=13, B=14, C=15, D=16, E=17, F=18, G=19, H=20, I=21, J=22, 
		K=23, L=24, M=25, N=26, O=27, P=28, Q=29, R=30, S=31, T=32, U=33, V=34, 
		W=35, X=36, Y=37, Z=38, COL2=39, COL=40, DOT=41, PERCENT=42, HYPHEN=43, 
		TILDE=44, USCORE=45, EXCL=46, DOLLAR=47, AMP=48, SQUOTE=49, OPAREN=50, 
		CPAREN=51, STAR=52, PLUS=53, COMMA=54, SCOL=55, EQUALS=56, FSLASH2=57, 
		FSLASH=58, QMARK=59, HASH=60, OBRACK=61, CBRACK=62, AT=63;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"UCSCHAR", "IPRIVATE", "'0'", "'1'", "'2'", "'3'", "'4'", "'5'", "'6'", 
		"'7'", "'8'", "'9'", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", 
		"K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", 
		"Y", "Z", "'::'", "':'", "'.'", "'%'", "'-'", "'~'", "'_'", "'!'", "'$'", 
		"'&'", "'''", "'('", "')'", "'*'", "'+'", "','", "';'", "'='", "'//'", 
		"'/'", "'?'", "'#'", "'['", "']'", "'@'"
	};
	public static final String[] ruleNames = {
		"UCSCHAR", "IPRIVATE", "D0", "D1", "D2", "D3", "D4", "D5", "D6", "D7", 
		"D8", "D9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", 
		"M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", 
		"COL2", "COL", "DOT", "PERCENT", "HYPHEN", "TILDE", "USCORE", "EXCL", 
		"DOLLAR", "AMP", "SQUOTE", "OPAREN", "CPAREN", "STAR", "PLUS", "COMMA", 
		"SCOL", "EQUALS", "FSLASH2", "FSLASH", "QMARK", "HASH", "OBRACK", "CBRACK", 
		"AT"
	};


	public IRILexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "IRI.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2A\u0103\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\3\2\5\2\u0083\n\2\3\3\5\3\u0086\n\3\3\4\3\4\3\5\3\5"+
		"\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16"+
		"\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25"+
		"\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34"+
		"\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3"+
		"%\3%\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/"+
		"\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66"+
		"\3\67\3\67\38\38\39\39\3:\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\2"+
		"A\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27"+
		"\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27"+
		"\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\""+
		"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62"+
		"\1c\63\1e\64\1g\65\1i\66\1k\67\1m8\1o9\1q:\1s;\1u<\1w=\1y>\1{?\1}@\1\177"+
		"A\1\3\2\36\5\3\u00a2\ud801\uf902\ufdd1\ufdf2\ufff1\3\3\ue002\uf901\4\2"+
		"CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4"+
		"\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2TTt"+
		"t\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\||\u0102"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2"+
		"\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2"+
		"{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\3\u0082\3\2\2\2\5\u0085\3\2\2\2\7\u0087"+
		"\3\2\2\2\t\u0089\3\2\2\2\13\u008b\3\2\2\2\r\u008d\3\2\2\2\17\u008f\3\2"+
		"\2\2\21\u0091\3\2\2\2\23\u0093\3\2\2\2\25\u0095\3\2\2\2\27\u0097\3\2\2"+
		"\2\31\u0099\3\2\2\2\33\u009b\3\2\2\2\35\u009d\3\2\2\2\37\u009f\3\2\2\2"+
		"!\u00a1\3\2\2\2#\u00a3\3\2\2\2%\u00a5\3\2\2\2\'\u00a7\3\2\2\2)\u00a9\3"+
		"\2\2\2+\u00ab\3\2\2\2-\u00ad\3\2\2\2/\u00af\3\2\2\2\61\u00b1\3\2\2\2\63"+
		"\u00b3\3\2\2\2\65\u00b5\3\2\2\2\67\u00b7\3\2\2\29\u00b9\3\2\2\2;\u00bb"+
		"\3\2\2\2=\u00bd\3\2\2\2?\u00bf\3\2\2\2A\u00c1\3\2\2\2C\u00c3\3\2\2\2E"+
		"\u00c5\3\2\2\2G\u00c7\3\2\2\2I\u00c9\3\2\2\2K\u00cb\3\2\2\2M\u00cd\3\2"+
		"\2\2O\u00cf\3\2\2\2Q\u00d2\3\2\2\2S\u00d4\3\2\2\2U\u00d6\3\2\2\2W\u00d8"+
		"\3\2\2\2Y\u00da\3\2\2\2[\u00dc\3\2\2\2]\u00de\3\2\2\2_\u00e0\3\2\2\2a"+
		"\u00e2\3\2\2\2c\u00e4\3\2\2\2e\u00e6\3\2\2\2g\u00e8\3\2\2\2i\u00ea\3\2"+
		"\2\2k\u00ec\3\2\2\2m\u00ee\3\2\2\2o\u00f0\3\2\2\2q\u00f2\3\2\2\2s\u00f4"+
		"\3\2\2\2u\u00f7\3\2\2\2w\u00f9\3\2\2\2y\u00fb\3\2\2\2{\u00fd\3\2\2\2}"+
		"\u00ff\3\2\2\2\177\u0101\3\2\2\2\u0081\u0083\t\2\2\2\u0082\u0081\3\2\2"+
		"\2\u0083\4\3\2\2\2\u0084\u0086\t\3\2\2\u0085\u0084\3\2\2\2\u0086\6\3\2"+
		"\2\2\u0087\u0088\7\62\2\2\u0088\b\3\2\2\2\u0089\u008a\7\63\2\2\u008a\n"+
		"\3\2\2\2\u008b\u008c\7\64\2\2\u008c\f\3\2\2\2\u008d\u008e\7\65\2\2\u008e"+
		"\16\3\2\2\2\u008f\u0090\7\66\2\2\u0090\20\3\2\2\2\u0091\u0092\7\67\2\2"+
		"\u0092\22\3\2\2\2\u0093\u0094\78\2\2\u0094\24\3\2\2\2\u0095\u0096\79\2"+
		"\2\u0096\26\3\2\2\2\u0097\u0098\7:\2\2\u0098\30\3\2\2\2\u0099\u009a\7"+
		";\2\2\u009a\32\3\2\2\2\u009b\u009c\t\4\2\2\u009c\34\3\2\2\2\u009d\u009e"+
		"\t\5\2\2\u009e\36\3\2\2\2\u009f\u00a0\t\6\2\2\u00a0 \3\2\2\2\u00a1\u00a2"+
		"\t\7\2\2\u00a2\"\3\2\2\2\u00a3\u00a4\t\b\2\2\u00a4$\3\2\2\2\u00a5\u00a6"+
		"\t\t\2\2\u00a6&\3\2\2\2\u00a7\u00a8\t\n\2\2\u00a8(\3\2\2\2\u00a9\u00aa"+
		"\t\13\2\2\u00aa*\3\2\2\2\u00ab\u00ac\t\f\2\2\u00ac,\3\2\2\2\u00ad\u00ae"+
		"\t\r\2\2\u00ae.\3\2\2\2\u00af\u00b0\t\16\2\2\u00b0\60\3\2\2\2\u00b1\u00b2"+
		"\t\17\2\2\u00b2\62\3\2\2\2\u00b3\u00b4\t\20\2\2\u00b4\64\3\2\2\2\u00b5"+
		"\u00b6\t\21\2\2\u00b6\66\3\2\2\2\u00b7\u00b8\t\22\2\2\u00b88\3\2\2\2\u00b9"+
		"\u00ba\t\23\2\2\u00ba:\3\2\2\2\u00bb\u00bc\t\24\2\2\u00bc<\3\2\2\2\u00bd"+
		"\u00be\t\25\2\2\u00be>\3\2\2\2\u00bf\u00c0\t\26\2\2\u00c0@\3\2\2\2\u00c1"+
		"\u00c2\t\27\2\2\u00c2B\3\2\2\2\u00c3\u00c4\t\30\2\2\u00c4D\3\2\2\2\u00c5"+
		"\u00c6\t\31\2\2\u00c6F\3\2\2\2\u00c7\u00c8\t\32\2\2\u00c8H\3\2\2\2\u00c9"+
		"\u00ca\t\33\2\2\u00caJ\3\2\2\2\u00cb\u00cc\t\34\2\2\u00ccL\3\2\2\2\u00cd"+
		"\u00ce\t\35\2\2\u00ceN\3\2\2\2\u00cf\u00d0\7<\2\2\u00d0\u00d1\7<\2\2\u00d1"+
		"P\3\2\2\2\u00d2\u00d3\7<\2\2\u00d3R\3\2\2\2\u00d4\u00d5\7\60\2\2\u00d5"+
		"T\3\2\2\2\u00d6\u00d7\7\'\2\2\u00d7V\3\2\2\2\u00d8\u00d9\7/\2\2\u00d9"+
		"X\3\2\2\2\u00da\u00db\7\u0080\2\2\u00dbZ\3\2\2\2\u00dc\u00dd\7a\2\2\u00dd"+
		"\\\3\2\2\2\u00de\u00df\7#\2\2\u00df^\3\2\2\2\u00e0\u00e1\7&\2\2\u00e1"+
		"`\3\2\2\2\u00e2\u00e3\7(\2\2\u00e3b\3\2\2\2\u00e4\u00e5\7)\2\2\u00e5d"+
		"\3\2\2\2\u00e6\u00e7\7*\2\2\u00e7f\3\2\2\2\u00e8\u00e9\7+\2\2\u00e9h\3"+
		"\2\2\2\u00ea\u00eb\7,\2\2\u00ebj\3\2\2\2\u00ec\u00ed\7-\2\2\u00edl\3\2"+
		"\2\2\u00ee\u00ef\7.\2\2\u00efn\3\2\2\2\u00f0\u00f1\7=\2\2\u00f1p\3\2\2"+
		"\2\u00f2\u00f3\7?\2\2\u00f3r\3\2\2\2\u00f4\u00f5\7\61\2\2\u00f5\u00f6"+
		"\7\61\2\2\u00f6t\3\2\2\2\u00f7\u00f8\7\61\2\2\u00f8v\3\2\2\2\u00f9\u00fa"+
		"\7A\2\2\u00fax\3\2\2\2\u00fb\u00fc\7%\2\2\u00fcz\3\2\2\2\u00fd\u00fe\7"+
		"]\2\2\u00fe|\3\2\2\2\u00ff\u0100\7_\2\2\u0100~\3\2\2\2\u0101\u0102\7B"+
		"\2\2\u0102\u0080\3\2\2\2\5\2\u0082\u0085";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}